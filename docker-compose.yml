version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app

  backend:
    build:
      context: ./backend         # 여기를 backend 폴더로
      dockerfile: Dockerfile     # backend/Dockerfile 을 가리킴
      args:
        - DATABASE_URL=${DATABASE_URL}
    image: coinpilot-backend:latest    # 명시적으로 태그 지정
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./backend:/usr/src/app   # WORKDIR 과 일치시키기
    depends_on:
      - db
      - redis

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    env_file:
      - .env    # REDIS_URL 이 .env 에 정의되어 있다면

  db:
    image: timescale/timescaledb:2.13.0-pg15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env

  airflow-init:
    build: ./airflow
    entrypoint: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --firstname Mingyu --lastname Cha --role Admin --email admin@example.com --password admin
      "
    env_file:
      - .env
    depends_on:
      - db
      - redis

  airflow:
    build: ./airflow
    command: webserver
    ports:
      - "9000:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/requirements.txt:/requirements.txt
    env_file:
      - .env
    depends_on:
      - airflow-init

  airflow-scheduler:
    build: ./airflow
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    env_file:
      - .env
    depends_on:
      - airflow

  collector:
    build: ./collector
    volumes:
      - ./collector:/app

volumes:
  pgdata:
